[{"/Users/yucelzengin/NodeJS_test/CompetencyTest-ui/src/index.js":"1","/Users/yucelzengin/NodeJS_test/CompetencyTest-ui/src/serviceWorker.js":"2","/Users/yucelzengin/NodeJS_test/CompetencyTest-ui/src/App.js":"3","/Users/yucelzengin/NodeJS_test/CompetencyTest-ui/src/UserForm.js":"4"},{"size":452,"mtime":1581055034000,"results":"5","hashOfConfig":"6"},{"size":5003,"mtime":1581055034000,"results":"7","hashOfConfig":"6"},{"size":5507,"mtime":1607779899305,"results":"8","hashOfConfig":"6"},{"size":2714,"mtime":1581055034000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"j43e08",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/Users/yucelzengin/NodeJS_test/CompetencyTest-ui/src/index.js",[],["20","21"],"/Users/yucelzengin/NodeJS_test/CompetencyTest-ui/src/serviceWorker.js",[],"/Users/yucelzengin/NodeJS_test/CompetencyTest-ui/src/App.js",["22","23","24","25","26"],"/Users/yucelzengin/NodeJS_test/CompetencyTest-ui/src/UserForm.js",["27","28"],"import React from 'react';\nimport { Formik, Field } from 'formik';\nimport PropTypes from 'prop-types';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass UserForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      country:undefined,\n      age: undefined,\n      sex: undefined,\n      countries: this.props.countries,\n      isLoading : true\n    };\n    \n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleAgeChange = this.handleAgeChange.bind(this)\n\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    console.log(value, name)\n    this.setState({\n      [name]: value\n    });\n  }\n  ageOnChange(e){\n    const re = /^[0-9\\b]+$/;\n    if (e.target.value === '' || re.test(e.target.value)) {\n       this.setState({value: e.target.age})\n    }\n };\n handleAgeChange(evt) {\n  const age = (evt.target.validity.valid) ? evt.target.value : this.state.age;\n  \n  this.setState({ age });\n}\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n      { !this.state.isLoading &&\n      <Formik>\n      <form onSubmit={this.handleSubmit}>\n      <label>{this.state.apiResponse}</label>\n        <label>{'deneme'+this.state.countries}\n          Name:\n          <input type=\"text\" value={this.state.name} onChange={this.handleChange} />\n        </label>\n        <br />\n       \n        <br />\n        <label>\n          Age:\n          <input type=\"text\" pattern=\"[0-9]*\" onInput={this.handleAgeChange.bind(this)} value={this.state.age} />\n        </label>\n        <br />\n        <br />\n        <label>\n        <input\n          type=\"radio\"\n          name=\"sex\"\n          value=\"Female\"\n          onChange={this.handleChange}\n        />a\n      </label>\n      <label>\n        <input\n          type=\"radio\"\n          name=\"sex\"\n          value=\"Male\"\n          onChange={this.handleChange}\n        />b\n      </label>\n      <br />\n      <br />\n        <label>\n          Country\n          <select value={this.state.country} onChange={this.handleChange}>\n            <option> choose country</option>\n            {this.state.countries ? this.state.countries.map((country) => <option key={country} value={country}>{country}</option>): ''}\n\n          </select>\n        </label>\n        <br />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      </Formik>\n      }\n      </div>\n    );\n  }\n}\n\nUserForm.propTypes ={\n  countries : PropTypes.array.isRequired\n}\n\nexport default UserForm;\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":25,"nodeType":"35","messageId":"36","endLine":2,"endColumn":29},{"ruleId":"33","severity":1,"message":"37","line":3,"column":13,"nodeType":"35","messageId":"36","endLine":3,"endColumn":16},{"ruleId":"33","severity":1,"message":"38","line":4,"column":8,"nodeType":"35","messageId":"36","endLine":4,"endColumn":12},{"ruleId":"33","severity":1,"message":"39","line":6,"column":8,"nodeType":"35","messageId":"36","endLine":6,"endColumn":16},{"ruleId":"33","severity":1,"message":"40","line":79,"column":7,"nodeType":"35","messageId":"36","endLine":79,"endColumn":15},{"ruleId":"33","severity":1,"message":"41","line":2,"column":18,"nodeType":"35","messageId":"36","endLine":2,"endColumn":23},{"ruleId":"33","severity":1,"message":"38","line":4,"column":8,"nodeType":"35","messageId":"36","endLine":4,"endColumn":12},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Yup' is defined but never used.","'logo' is defined but never used.","'UserForm' is defined but never used.","'response' is assigned a value but never used.","'Field' is defined but never used.","no-global-assign","no-unsafe-negation"]